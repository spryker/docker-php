name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          ## Alpine
          ### Alpine 3.17
          - image: "alpine/3.17/8.1/Dockerfile"
            tags: [ "spryker/php:8.1-alpine3.17" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.17/8.2/Dockerfile"
            tags: [ "spryker/php:8.2-alpine3.17" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.17/8.3/Dockerfile"
            tags: [ "spryker/php:8.3-alpine3.17" ]
            platforms: [ "linux/amd64", "linux/arm64" ]

          ### Alpine 3.18
          - image: "alpine/3.18/8.1/Dockerfile"
            tags: [ "spryker/php:8.1", "spryker/php:8.1-alpine3.18" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.18/8.2/Dockerfile"
            tags: [ "spryker/php:latest", "spryker/php:8.2", "spryker/php:8.2-alpine3.18" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.18/8.3/Dockerfile"
            tags: [ "spryker/php:8.3", "spryker/php:8.3-alpine3.18" ]
            platforms: [ "linux/amd64", "linux/arm64" ]

          ### Alpine 3.19
          - image: "alpine/3.19/8.1/Dockerfile"
            tags: [ "spryker/php:8.1-alpine3.19" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.19/8.2/Dockerfile"
            tags: [ "spryker/php:8.2-alpine3.19" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.19/8.3/Dockerfile"
            tags: [ "spryker/php:8.3-alpine3.19" ]
            platforms: [ "linux/amd64", "linux/arm64" ]

          ### Alpine 3.20
          - image: "alpine/3.20/8.1/Dockerfile"
            tags: [ "spryker/php:8.1-alpine3.20" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.20/8.2/Dockerfile"
            tags: [ "spryker/php:8.2-alpine3.20" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "alpine/3.20/8.3/Dockerfile"
            tags: [ "spryker/php:8.3-alpine3.20" ]
            platforms: [ "linux/amd64", "linux/arm64" ]

          ## Debian
          ### Debian bullseye
          - image: "debian/bullseye/8.0/Dockerfile"
            tags: [ "spryker/php:8.0-debian" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "debian/bullseye/8.1/Dockerfile"
            tags: [ "spryker/php:8.1-debian" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "debian/bullseye/8.2/Dockerfile"
            tags: [ "spryker/php:8.2-debian" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
          - image: "debian/bullseye/8.3/Dockerfile"
            tags: [ "spryker/php:8.3-debian" ]
            platforms: [ "linux/amd64", "linux/arm64" ]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the previous commit hash
#        if: ${{ github.ref == 'refs/heads/master' }}
        id: previous_commit
        run: echo "PREV_COMMIT_HASH=$(git rev-parse HEAD^1)" >> $GITHUB_ENV

      - name: Re-tag images with previous commit hash
#        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          IMAGE_TAGS=${{ matrix.tags }}
          PREV_HASH=${{ env.PREV_COMMIT_HASH }}
          for IMAGE_TAG in ${IMAGE_TAGS[@]}; do
            docker pull $IMAGE_TAG
            docker tag $IMAGE_TAG $IMAGE_TAG-$PREV_HASH
            echo "Re-tagged image: $NEW_TAG"
#            docker push $IMAGE_TAG-$PREV_HASH
          done

#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: ${{ github.ref == 'refs/heads/master' }}
#          file: ${{ matrix.image }}
#          tags: ${{ join(matrix.tags) }}
#          platforms: ${{ join(matrix.platforms) }}
